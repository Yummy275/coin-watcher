{"version":3,"sources":["api/getAvailableCoins.js","components/SearchCoinPreview.js","images/ethcoin.png","components/Loading.js","components/AvailableCoins.js","components/Topbar.js","data/loadSavedCoins.js","data/roundNumberString.js","data/addNewCoin.js","components/AddCoinModal.js","data/getHoldAmount.js","data/deleteCoin.js","data/updateCoinHoldAmount.js","components/UserCoinTickerInfo.js","components/CoinsSection.js","components/DoughnutChart.js","components/Attribution.js","components/ChartAndTotalValue.js","components/UserCoinsInformation.js","data/getSavedCoinSymbols.js","api/getCoinsInfo.js","components/MainDisplay.js","App.js","index.js"],"names":["getAvailableCoins","a","process","target","fetch","response","json","data","styles","SearchCoinPreview","logo","id","name","className","src","alt","Loading","ethCoin","AvailableCoins","availableCoins","setAddingCoinData","setHideSearchMenu","hiding","listRef","useRef","onClick","onBlur","setTimeout","onChange","e","searchInput","scrollIndex","formattedInputValue","toLowerCase","i","length","formattedName","startsWith","current","scrollToItem","searchAvailableCoins","value","ref","height","itemCount","itemSize","width","index","style","coin","logo_url","Topbar","userCoinsInfoStillLoading","useState","hideSearchMenu","setAvailableCoins","useEffect","getCoins","filteredCoinsArr","forEach","description","push","alert","loadSavedCoins","JSON","parse","localStorage","getItem","roundNumberString","numString","rounded","Number","toFixed","addNewCoin","symbol","holdAmount","newCoin","currentCoins","arr","setItem","stringify","alreadyOwnCoinFlag","updatedArr","AddCoinModal","coinData","closeModal","updateUserCoins","holdVal","setHoldValue","placeholder","type","step","getHoldAmount","savedCoins","deleteCoin","savedCoinsArr","splice","updateCoinHoldAmount","newHoldValue","formattedHoldAmount","UserCoinTickerInfo","coinInfo","holdInput","parsedPrice","parseFloat","price","updatingHoldAmt","setUpdatingHoldAmt","newHoldAmt","setNewHoldAmt","toggleHoldInput","focus","onKeyPress","key","blur","checkEnterPressOnInput","CoinsSection","userCoinsTickerData","loadingData","map","DoughnutChart","labels","dataPoints","totalWorth","chartData","datasets","backgroundColor","Attribution","href","rel","ChartAndTotalValue","total","round","toLocaleString","findTotalWorth","coinArr","backToNumber","coinObject","UsersCoinInformation","autoUpdatePrices","setInterval","clearInterval","getSavedCoinSymbols","getCoinsInfo","coins","coinNames","join","MainDisplay","addingCoinData","setUserCoinsTickerData","loading","setLoading","coinSymbols","coinTickerData","initialLoad","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed261379.chunk.js","sourcesContent":["const getAvailableCoins = async () => {\n    const apiKey = process.env.REACT_APP_API_KEY;\n    const target = `https://api.nomics.com/v1/currencies?key=${apiKey}&attributes=id,name,logo_url,description`;\n    const response = await fetch(target);\n    const data = await response.json();\n    return data;\n};\n\nexport default getAvailableCoins;\n","import React from 'react';\n\nconst styles = {\n    container: 'flex h-full p-2 items-center',\n    logo: 'h-12 w-12',\n    textHolder: 'ml-1',\n    id: 'text-xs',\n    name: 'text-sm',\n};\n\nconst SearchCoinPreview = ({ logo, id, name }) => {\n    return (\n        <div className={styles.container}>\n            <img src={logo} alt=\"coin-logo\" className={styles.logo}></img>\n            <div className={styles.textHolder}>\n                <p className={styles.id}>({id})</p>\n                <p className={styles.name}>{name}</p>\n            </div>\n        </div>\n    );\n};\n\nexport default SearchCoinPreview;\n","export default __webpack_public_path__ + \"static/media/ethcoin.2b11334e.png\";","import React from 'react';\nimport ethCoin from '../images/ethcoin.png';\n\nconst styles = {\n    mainContainer: 'h-64 flex justify-center',\n    eye: 'bg-eyeOutline bg-contain bg-center bg-no-repeat w-60 flex items-center justify-center',\n    ethCoin: 'absolute w-12 animate-coinSpin',\n};\n\nconst Loading = () => {\n    return (\n        <div className={styles.mainContainer}>\n            <div className={`${styles.eye}`}>\n                <img\n                    className={styles.ethCoin}\n                    src={ethCoin}\n                    alt=\"loading coin\"\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default Loading;\n","import React, { useRef } from 'react';\nimport { FixedSizeList as List } from 'react-window';\nimport SearchCoinPreview from './SearchCoinPreview';\nimport Loading from './Loading';\n\nconst styles = {\n    coinSearchInput: 'p-1 bg-white rounded-t focus:outline-none',\n    searchMenu:\n        'absolute z-10 w-full bg-white top-8 rounded-b transition-all duration-200 linear',\n};\n\nconst AvailableCoins = ({\n    availableCoins,\n    setAddingCoinData,\n    setHideSearchMenu,\n    hiding,\n}) => {\n    const listRef = useRef();\n\n    const coinPreviewClick = (coin) => {\n        setHideSearchMenu(true);\n        setAddingCoinData(coin);\n    };\n\n    const SearchCoinListTemplate = ({ index, style }) => (\n        <div\n            onClick={() => coinPreviewClick(availableCoins[index])}\n            style={style}\n            className={`${\n                index % 2 === 0 ? 'bg-white' : 'bg-whitePurple'\n            } cursor-pointer`}\n        >\n            <SearchCoinPreview\n                logo={availableCoins[index].logo_url}\n                id={availableCoins[index].id}\n                name={availableCoins[index].name}\n            />\n        </div>\n    );\n\n    const searchAvailableCoins = (searchInput) => {\n        let scrollIndex = 0;\n        const inputValue = searchInput;\n        const formattedInputValue = inputValue.toLowerCase();\n        for (var i = 0; i < availableCoins.length; i++) {\n            const formattedName = availableCoins[i].name.toLowerCase();\n            if (formattedName === formattedInputValue) {\n                scrollIndex = i;\n                break;\n            } else if (\n                formattedName.startsWith(formattedInputValue) &&\n                scrollIndex === 0\n            ) {\n                scrollIndex = i;\n            }\n        }\n        listRef.current.scrollToItem(scrollIndex, 'start');\n    };\n\n    //delays closing menu so menu item can be clicked\n    const delayedCloseSearchMenu = () => {\n        setTimeout(() => {\n            setHideSearchMenu(true);\n        }, 50);\n    };\n\n    return (\n        <div\n            onClick={() => setHideSearchMenu(false)}\n            onBlur={delayedCloseSearchMenu}\n        >\n            <input\n                className={styles.coinSearchInput}\n                onChange={(e) => {\n                    searchAvailableCoins(e.target.value);\n                }}\n            />\n            <div\n                className={`${styles.searchMenu} ${\n                    hiding\n                        ? 'h-0 opacity-0 pointer-events-none'\n                        : 'h-96 opacity-100 pointer-events-auto'\n                }`}\n            >\n                {availableCoins.length === 0 ? (\n                    <Loading />\n                ) : (\n                    <List\n                        ref={listRef}\n                        height={380}\n                        itemCount={availableCoins.length}\n                        itemSize={80}\n                        width={310}\n                    >\n                        {SearchCoinListTemplate}\n                    </List>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default AvailableCoins;\n","import React, { useState, useEffect } from 'react';\nimport getAvailableCoins from '../api/getAvailableCoins';\nimport AvailableCoins from './AvailableCoins';\n\nconst styles = {\n    mainContainer:\n        'h-16 w-full bg-lightPurple flex justify-center items-center',\n    contentContainer: 'flex flex-col items-center relative',\n};\n\nconst Topbar = ({ setAddingCoinData, userCoinsInfoStillLoading }) => {\n    const [hideSearchMenu, setHideSearchMenu] = useState(true);\n    const [availableCoins, setAvailableCoins] = useState([]);\n\n    useEffect(() => {\n        const getCoins = async () => {\n            try {\n                const availableCoins = await getAvailableCoins();\n                const filteredCoinsArr = [];\n                availableCoins.forEach((coin) => {\n                    if (\n                        coin.logo_url !== '' &&\n                        coin.description !== '' &&\n                        coin.name !== ''\n                    ) {\n                        filteredCoinsArr.push(coin);\n                    }\n                });\n                setAvailableCoins(filteredCoinsArr);\n            } catch (e) {\n                alert('Error getting available coins');\n                setAvailableCoins(null);\n            }\n        };\n\n        //checks to make sure done loading user coin info\n        //and uses timeout to make sure at least 2 seconds pass\n        //nomics API will deny requests if request too fast\n        if (!userCoinsInfoStillLoading) {\n            setTimeout(() => getCoins(), 2000);\n        }\n    }, [userCoinsInfoStillLoading]);\n\n    return (\n        <div className={styles.mainContainer}>\n            <div className={styles.contentContainer}>\n                {availableCoins === null ? (\n                    <h2>Error loading available coins</h2>\n                ) : (\n                    <AvailableCoins\n                        availableCoins={availableCoins}\n                        setAddingCoinData={setAddingCoinData}\n                        hiding={hideSearchMenu}\n                        setHideSearchMenu={setHideSearchMenu}\n                    />\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Topbar;\n","const loadSavedCoins = () => {\n    const currentCoins = JSON.parse(localStorage.getItem('savedCoins'));\n    return currentCoins;\n};\n\nexport default loadSavedCoins;\n","const roundNumberString = (numString) => {\n    const numStringToNumber = Number(numString);\n    const rounded = numStringToNumber.toFixed(8);\n    const formattedNum = Number(rounded);\n    return formattedNum;\n};\n\nexport default roundNumberString;\n","import loadSavedCoins from './loadSavedCoins';\nimport roundNumberString from './roundNumberString';\n\nconst addNewCoin = (symbol, holdAmount) => {\n    const formattedHoldAmount = roundNumberString(holdAmount);\n    const newCoin = { symbol: symbol, holdAmount: formattedHoldAmount };\n    const currentCoins = loadSavedCoins();\n    if (currentCoins === null) {\n        const arr = [newCoin];\n        localStorage.setItem('savedCoins', JSON.stringify(arr));\n    } else {\n        let alreadyOwnCoinFlag = false;\n        for (var i = 0; i < currentCoins.length; i++) {\n            if (symbol === currentCoins[i].symbol) {\n                alreadyOwnCoinFlag = true;\n                break;\n            }\n        }\n        if (alreadyOwnCoinFlag === false) {\n            const updatedArr = [...currentCoins, newCoin];\n            localStorage.setItem('savedCoins', JSON.stringify(updatedArr));\n        } else {\n            alert('You have already added this coin!');\n        }\n    }\n};\n\nexport default addNewCoin;\n","import React, { useState } from 'react';\nimport addNewCoin from '../data/addNewCoin';\n\nconst styles = {\n    blurredBg:\n        'blurredBg flex justify-center items-center w-screen h-screen fixed -top-0 z-10',\n    contentContainer:\n        'flex flex-col w-full max-w-lg h-102 p-3 bg-white rounded shadow-md',\n    title: 'text-center text-lg',\n    logo: 'w-28 my-2 mx-auto',\n    description: 'text-sm text-center h-56 overflow-auto',\n    holdAmtInput: 'p-1 mt-2',\n    btnsContainer: 'flex justify-evenly mt-4',\n    btn: 'bg-whitePurple py-1 px-2 rounded',\n};\n\nconst AddCoinModal = ({ coinData, closeModal, updateUserCoins }) => {\n    const [holdVal, setHoldValue] = useState(null);\n\n    const addCoin = () => {\n        if (holdVal !== 0 || holdVal !== null) {\n            addNewCoin(coinData.id, holdVal);\n            updateUserCoins();\n            closeModal();\n        }\n    };\n\n    return (\n        <div className={styles.blurredBg}>\n            <div className={styles.contentContainer}>\n                <div\n                    className={styles.title}\n                >{`${coinData.name} (${coinData.id})`}</div>\n                <img\n                    src={coinData.logo_url}\n                    alt=\"coin-logo\"\n                    className={styles.logo}\n                />\n                <p className={styles.description}>{coinData.description}</p>\n                <input\n                    className={styles.holdAmtInput}\n                    placeholder=\"Hold amount\"\n                    type=\"number\"\n                    step=\"any\"\n                    onChange={(e) => setHoldValue(e.target.value)}\n                />\n                <div className={styles.btnsContainer}>\n                    <button className={styles.btn} onClick={addCoin}>\n                        Add Coin\n                    </button>\n                    <button className={styles.btn} onClick={closeModal}>\n                        Close\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default AddCoinModal;\n","import loadSavedCoins from './loadSavedCoins';\n\nconst getHoldAmount = (symbol) => {\n    const savedCoins = loadSavedCoins();\n    let holdAmount;\n    for (var i = 0; i < savedCoins.length; i++) {\n        if (savedCoins[i].symbol === symbol) {\n            holdAmount = savedCoins[i].holdAmount;\n            break;\n        }\n    }\n    return holdAmount;\n};\n\nexport default getHoldAmount;\n","import loadSavedCoins from './loadSavedCoins';\n\nconst deleteCoin = (symbol) => {\n    const savedCoinsArr = loadSavedCoins();\n    for (var i = 0; i < savedCoinsArr.length; i++) {\n        if (savedCoinsArr[i].symbol === symbol) {\n            savedCoinsArr.splice(i, 1);\n            localStorage.setItem('savedCoins', JSON.stringify(savedCoinsArr));\n        }\n    }\n};\n\nexport default deleteCoin;\n","import loadSavedCoins from './loadSavedCoins';\nimport roundNumberString from './roundNumberString';\n\nconst updateCoinHoldAmount = (symbol, newHoldValue) => {\n    const formattedHoldAmount = roundNumberString(newHoldValue);\n    const savedCoinsArr = loadSavedCoins();\n    for (var i = 0; i < savedCoinsArr.length; i++) {\n        if (savedCoinsArr[i].symbol === symbol) {\n            savedCoinsArr[i].holdAmount = formattedHoldAmount;\n            localStorage.setItem('savedCoins', JSON.stringify(savedCoinsArr));\n        }\n    }\n};\n\nexport default updateCoinHoldAmount;\n","import React, { useState, useRef, useEffect } from 'react';\nimport getHoldAmount from '../data/getHoldAmount';\nimport deleteCoin from '../data/deleteCoin';\nimport updateCoinHoldAmount from '../data/updateCoinHoldAmount';\n\nconst styles = {\n    mainContainer: 'flex m-2 p-2 bg-white rounded',\n    coinImg: 'w-12',\n    infoSection: 'ml-2',\n    coinTitle: 'text-lg',\n    deleteBtn: 'inline bg-transparent ml-2 px-1 text-red',\n    holdInput: 'w-36 px-1',\n    coinHold: 'cursor-pointer',\n    coinTotal: 'italic underline',\n};\n\nconst UserCoinTickerInfo = ({ coinInfo, updateUserCoins }) => {\n    const holdInput = useRef(null);\n    const holdAmount = getHoldAmount(coinInfo.id);\n    const parsedPrice = parseFloat(coinInfo.price);\n    const [updatingHoldAmt, setUpdatingHoldAmt] = useState(false);\n    const [newHoldAmt, setNewHoldAmt] = useState('');\n\n    const deleteUserCoin = () => {\n        deleteCoin(coinInfo.id);\n        updateUserCoins();\n    };\n\n    const toggleHoldInput = () => {\n        if (updatingHoldAmt === false) {\n            setUpdatingHoldAmt(true);\n        } else {\n            setUpdatingHoldAmt(false);\n        }\n    };\n\n    useEffect(() => {\n        if (updatingHoldAmt) {\n            holdInput.current.focus();\n        }\n    });\n\n    const updateHoldAmt = () => {\n        if (newHoldAmt !== '' && newHoldAmt !== holdAmount) {\n            updateCoinHoldAmount(coinInfo.id, newHoldAmt);\n            updateUserCoins();\n        }\n    };\n\n    const doneInputtingHold = () => {\n        toggleHoldInput();\n        updateHoldAmt();\n    };\n\n    const checkEnterPressOnInput = (e) => {\n        if (e.key === 'Enter') {\n            holdInput.current.blur();\n        }\n    };\n\n    return (\n        <div className={styles.mainContainer}>\n            <img\n                className={styles.coinImg}\n                src={coinInfo.logo_url}\n                alt=\"coin-logo\"\n            />\n            <div className={styles.infoSection}>\n                <div className={styles.coinTitle}>\n                    {`${coinInfo.name} (${coinInfo.symbol}`})\n                    <button\n                        onClick={deleteUserCoin}\n                        className={styles.deleteBtn}\n                    >\n                        X\n                    </button>\n                </div>\n                <div>${parsedPrice.toFixed(2)}</div>\n                <div onClick={toggleHoldInput} className={styles.coinHold}>\n                    <span className={updatingHoldAmt ? 'hidden' : ''}>\n                        x {holdAmount}\n                    </span>\n                    <input\n                        type=\"number\"\n                        onChange={(e) => {\n                            setNewHoldAmt(e.target.value);\n                        }}\n                        onKeyPress={(e) => checkEnterPressOnInput(e)}\n                        onBlur={doneInputtingHold}\n                        className={`${styles.holdInput} ${\n                            updatingHoldAmt ? '' : 'hidden'\n                        }`}\n                        ref={holdInput}\n                    />\n                </div>\n                <div className={styles.coinTotal}>\n                    ${(parsedPrice * holdAmount).toFixed(2)}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default UserCoinTickerInfo;\n","import React from 'react';\nimport Loading from './Loading';\nimport UserCoinTickerInfo from './UserCoinTickerInfo';\n\nconst styles = {\n    mainContainer:\n        'coins-container lg:w-2/5 bg-lightPurpleToWhiteGradientDown overflow-auto',\n    userCoins: 'flex lg:flex-wrap w-max lg:w-auto mb-4 lg:mb-0',\n    noCoinsMsg: 'text-2xl p-1 text-center',\n};\n\nconst CoinsSection = ({\n    userCoinsTickerData,\n    loadingData,\n    updateUserCoins,\n}) => {\n    return (\n        <div className={styles.mainContainer}>\n            {loadingData ? (\n                <Loading />\n            ) : (\n                <>\n                    {userCoinsTickerData.length === 0 ? (\n                        <h2 className={styles.noCoinsMsg}>\n                            No saved coins found! Use search above to find\n                            coins.\n                        </h2>\n                    ) : (\n                        <div className={styles.userCoins}>\n                            {userCoinsTickerData.map((coin) => (\n                                <UserCoinTickerInfo\n                                    coinInfo={coin}\n                                    key={coin.id}\n                                    updateUserCoins={updateUserCoins}\n                                />\n                            ))}\n                        </div>\n                    )}\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default CoinsSection;\n","import React from 'react';\nimport { Doughnut } from '@iftek/react-chartjs-3';\n\nconst DoughnutChart = ({ data }) => {\n    const labels = [];\n    const dataPoints = [];\n\n    for (var i = 0; i < data.length; i++) {\n        labels.push(data[i].symbol);\n        dataPoints.push(data[i].totalWorth);\n    }\n\n    const chartData = {\n        labels: labels,\n        datasets: [\n            {\n                data: dataPoints,\n                backgroundColor: [\n                    '#ff0000',\n                    '#0000ff',\n                    '#065535',\n                    '#ff80ed',\n                    '#ffa500',\n                    '#ffd700',\n                    '#00ffff',\n                    '#003366',\n                    '#66cdaa',\n                    '#f5f5f5',\n                ],\n            },\n        ],\n    };\n\n    return <Doughnut data={chartData}></Doughnut>;\n};\n\nexport default DoughnutChart;\n","import React from 'react';\n\nconst style = {\n    bar: 'h-12 flex justify-center items-center text-center mt-3',\n    link: 'p-1 underline cursor-pointer',\n};\n\nconst Attribution = () => {\n    return (\n        <div className={style.bar}>\n            <a\n                href=\"https://nomics.com/\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                className={style.link}\n            >\n                Crypto Market Cap & Pricing Data Provided By Nomics\n            </a>\n        </div>\n    );\n};\n\nexport default Attribution;\n","import React from 'react';\nimport DoughnutChart from './DoughnutChart';\nimport Attribution from './Attribution';\nimport getHoldAmount from '../data/getHoldAmount';\n\nconst styles = {\n    mainContainer: 'w-100 max-w-2xl mx-auto mt-5',\n    totalValue: 'mb-5 text-3xl text-center',\n};\n\nconst ChartAndTotalValue = ({ userCoinsTickerData }) => {\n    const chartData = (data) => {\n        const coinArr = [];\n        for (var i = 0; i < data.length; i++) {\n            const holdAmount = getHoldAmount(data[i].symbol);\n            const totalAmountWorth = holdAmount * data[i].price;\n            const round = totalAmountWorth.toFixed(2);\n            const backToNumber = Number(round);\n            const coinObject = {\n                symbol: data[i].symbol,\n                totalWorth: backToNumber,\n            };\n            coinArr.push(coinObject);\n        }\n        return coinArr;\n    };\n\n    const findTotalWorth = () => {\n        let total = 0;\n        for (var i = 0; i < userCoinsTickerData.length; i++) {\n            const holdAmount = getHoldAmount(userCoinsTickerData[i].symbol);\n            const worth = holdAmount * userCoinsTickerData[i].price;\n            total += worth;\n        }\n        const round = total.toFixed(2);\n        const backToNumber = Number(round);\n        const formattedTotal = backToNumber.toLocaleString();\n        return formattedTotal;\n    };\n\n    return (\n        <div className={styles.mainContainer}>\n            {userCoinsTickerData.length === 0 ? (\n                ''\n            ) : (\n                <>\n                    <h1 className={styles.totalValue}>${findTotalWorth()}</h1>\n                    <DoughnutChart data={chartData(userCoinsTickerData)} />{' '}\n                </>\n            )}\n            <Attribution />\n        </div>\n    );\n};\n\nexport default ChartAndTotalValue;\n","import React, { useEffect } from 'react';\nimport CoinsSection from './CoinsSection';\nimport ChartAndTotalValue from './ChartAndTotalValue';\n\nconst UsersCoinInformation = ({\n    userCoinsTickerData,\n    loadingData,\n    updateUserCoins,\n}) => {\n    useEffect(() => {\n        const autoUpdatePrices = setInterval(() => {\n            updateUserCoins();\n        }, 60000);\n        return () => clearInterval(autoUpdatePrices);\n    });\n\n    if (userCoinsTickerData === null) {\n        return <h1>Error loading coins. Reload page or check internet.</h1>;\n    } else {\n        return (\n            <div className=\"lg:flex\">\n                <CoinsSection\n                    userCoinsTickerData={userCoinsTickerData}\n                    loadingData={loadingData}\n                    updateUserCoins={updateUserCoins}\n                />\n                <ChartAndTotalValue userCoinsTickerData={userCoinsTickerData} />\n            </div>\n        );\n    }\n};\n\nexport default UsersCoinInformation;\n","import loadSavedCoins from './loadSavedCoins';\n\nconst getSavedCoinSymbols = () => {\n    const coinBag = loadSavedCoins();\n    const symbols = coinBag.map((coin) => {\n        return coin.symbol;\n    });\n    return symbols;\n};\n\nexport default getSavedCoinSymbols;\n","const getCoinsInfo = async (coins) => {\n    const coinNames = coins.join(',');\n    const apiKey = process.env.REACT_APP_API_KEY;\n    const target = `https://api.nomics.com/v1/currencies/ticker?key=${apiKey}&ids=${coinNames}`;\n    const response = await fetch(target);\n    const data = await response.json();\n    return data;\n};\n\nexport default getCoinsInfo;\n","import React, { useState, useEffect } from 'react';\nimport Topbar from './Topbar';\nimport AddCoinModal from './AddCoinModal';\nimport UsersCoinInformation from './UserCoinsInformation';\nimport loadSavedCoins from '../data/loadSavedCoins';\nimport getSavedCoinSymbols from '../data/getSavedCoinSymbols';\nimport getCoinsInfo from '../api/getCoinsInfo';\n\nconst MainDisplay = () => {\n    const [addingCoinData, setAddingCoinData] = useState(null);\n    const [userCoinsTickerData, setUserCoinsTickerData] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    const updateUserCoins = async () => {\n        const savedCoins = loadSavedCoins();\n        if (savedCoins !== null) {\n            if (savedCoins.length !== 0) {\n                const coinSymbols = getSavedCoinSymbols();\n                try {\n                    const coinTickerData = await getCoinsInfo(coinSymbols);\n                    setUserCoinsTickerData(coinTickerData);\n                } catch (error) {\n                    alert('Error getting coin information. Reload.');\n                    setUserCoinsTickerData(null);\n                }\n            } else {\n                setUserCoinsTickerData([]);\n            }\n        } else {\n            setUserCoinsTickerData([]);\n        }\n    };\n\n    useEffect(() => {\n        const initialLoad = async () => {\n            await updateUserCoins();\n            setLoading(false);\n        };\n\n        initialLoad();\n    }, []);\n\n    return (\n        <>\n            {addingCoinData ? (\n                <AddCoinModal\n                    updateUserCoins={updateUserCoins}\n                    coinData={addingCoinData}\n                    closeModal={() => setAddingCoinData(null)}\n                />\n            ) : (\n                ''\n            )}\n            <Topbar\n                setAddingCoinData={setAddingCoinData}\n                userCoinsInfoStillLoading={loading}\n            />\n            <UsersCoinInformation\n                userCoinsTickerData={userCoinsTickerData}\n                loadingData={loading}\n                updateUserCoins={updateUserCoins}\n            />\n        </>\n    );\n};\n\nexport default MainDisplay;\n","import React from 'react';\nimport './App.css';\nimport MainDisplay from './components/MainDisplay';\n\nfunction App() {\n    return (\n        <div className=\"min-h-screen h-screen bg-white\">\n            <MainDisplay />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}