{"version":3,"sources":["api/getCoinsInfoFromApi.js","api/getAvailableCoins.js","data/loadSavedCoins.js","data/getSavedCoinSymbols.js","data/getHoldAmount.js","components/NavCoinPreview.js","components/Navbar.js","components/StdBtn.js","data/deleteCoin.js","data/updateHoldValue.js","components/EditCoinModal.js","components/CoinInfo.js","components/CoinHolder.js","images/eyecoin.png","images/ethcoin.png","components/NoSavedCoinsSign.js","components/Attribution.js","components/LoadingBalls.js","data/addNewCoin.js","components/AddCoinModal.js","components/DoughnutChart.js","App.js","index.js"],"names":["getCoinsInfoFromApi","coins","a","coinNames","join","process","target","fetch","response","json","data","getAvailableCoins","loadSavedCoins","JSON","parse","localStorage","getItem","getSavedCoinSymbols","map","coin","symbol","getHoldAmount","holdAmount","savedCoins","i","length","styles","NavCoinPreview","logo","id","name","setNewCoinSymbol","setSearchBoxHidden","className","onClick","src","Navbar","availableCoins","searchInput","useRef","listRef","useState","searchBoxHidden","onMouseLeave","onMouseEnter","onFocus","ref","placeholder","onChange","scrollIndex","formattedInputValue","current","value","toLowerCase","formattedName","startsWith","scrollToItem","height","itemCount","itemSize","width","index","style","logo_url","StdBtn","string","handleClick","size","deleteCoin","savedCoinsArr","splice","setItem","stringify","updateHoldValue","newHold","rounded","Number","toFixed","formattedHoldAmount","EditCoinModal","hold","setViewingEditModal","updateSavedCoins","holdInputRef","type","step","min","defaultValue","holdValue","container","headerHolder","coinLogo","smTxt","headingText","coinPriceInfoHolder","getTotalCoinWorth","price","round","toLocaleString","CoinInfo","viewingEditModal","parseFloat","formattedPrice","alt","wordBox","CoinHolder","coinsData","totalWorth","total","findTotalWorth","NoSavedCoinsSign","ethCoin","coinEye","Attribution","href","LoadingBalls","addNewCoin","newCoin","currentCoins","arr","alreadyOwnCoin","updatedArr","alert","AddCoinModal","hideModal","userInput","maxLength","DoughnutChart","labels","dataPoints","push","chartData","datasets","backgroundColor","App","savedCoinsData","setSavedCoinsData","setChartData","setAvailableCoins","newCoinSymbol","updateRatioChart","coinArr","backToNumber","coinObject","savedCoinSymbols","console","log","useEffect","fetchSavedCoinsData","setTimeout","filteredArr","forEach","description","fetchAvailableCoins","maxWidth","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63d0f843.chunk.js","sourcesContent":["const getCoinsInfoFromApi = async (coins) => {\n    const coinNames = coins.join(',');\n    const apiKey = process.env.REACT_APP_API_KEY;\n    const target = `https://api.nomics.com/v1/currencies/ticker?key=${apiKey}&ids=${coinNames}`;\n    const response = await fetch(target);\n    const data = await response.json();\n    return data;\n};\n\nexport default getCoinsInfoFromApi;\n","const getAvailableCoins = async () => {\n    const apiKey = process.env.REACT_APP_API_KEY;\n    const target = `https://api.nomics.com/v1/currencies?key=${apiKey}&attributes=id,name,logo_url,description`;\n    const response = await fetch(target);\n    const data = await response.json();\n    return data;\n};\n\nexport default getAvailableCoins;\n","const loadSavedCoins = () => {\n    const currentCoins = JSON.parse(localStorage.getItem('savedCoins'));\n    return currentCoins;\n};\n\nexport default loadSavedCoins;\n","import loadSavedCoins from './loadSavedCoins';\n\nconst getSavedCoinSymbols = () => {\n    const coinBag = loadSavedCoins();\n    const symbols = coinBag.map((coin) => {\n        return coin.symbol;\n    });\n    return symbols;\n};\n\nexport default getSavedCoinSymbols;\n","import loadSavedCoins from './loadSavedCoins';\n\nconst getHoldAmount = (symbol) => {\n    const savedCoins = loadSavedCoins();\n    let holdAmount;\n    for (var i = 0; i < savedCoins.length; i++) {\n        if (savedCoins[i].symbol === symbol) {\n            holdAmount = savedCoins[i].holdAmount;\n            break;\n        }\n    }\n    return holdAmount;\n};\n\nexport default getHoldAmount;\n","import React from 'react';\n\nconst styles = {\n    container: 'cursor-pointer ml-2 flex',\n    logo: 'h-12 w-12',\n    textHolder: 'ml-1',\n    id: 'text-xs',\n    name: 'text-sm',\n};\n\nconst NavCoinPreview = ({\n    logo,\n    id,\n    name,\n    setNewCoinSymbol,\n    setSearchBoxHidden,\n}) => {\n    const handleClick = () => {\n        setSearchBoxHidden(true);\n        setNewCoinSymbol(id);\n    };\n\n    return (\n        <div className={styles.container} onClick={handleClick}>\n            <img src={logo} className={styles.logo}></img>\n            <div className={styles.textHolder}>\n                <p className={styles.id}>({id})</p>\n                <p className={styles.name}>{name}</p>\n            </div>\n        </div>\n    );\n};\n\nexport default NavCoinPreview;\n","import React, { useRef, useState } from 'react';\nimport { FixedSizeList as List } from 'react-window';\nimport NavCoinPreview from './NavCoinPreview';\n\nconst styles = {\n    navbar: `relative h-12 flex justify-center items-center bg-englishLavender`,\n    searchInput: `h-3/4 w-56 rounded-md p-1 bg-white text-black`,\n    searchBox:\n        'transition-all z-10 duration-1000 absolute top-12 overflow-hidden bg-englishLavender',\n};\n\nconst Navbar = ({ availableCoins, setNewCoinSymbol }) => {\n    const searchInput = useRef();\n    const listRef = useRef();\n    const [searchBoxHidden, setSearchBoxHidden] = useState(true);\n\n    const searchAvailableCoins = () => {\n        let scrollIndex = 0;\n        const inputValue = searchInput.current.value;\n        const formattedInputValue = inputValue.toLowerCase();\n        for (var i = 0; i < availableCoins.length; i++) {\n            const formattedName = availableCoins[i].name.toLowerCase();\n            if (formattedName === formattedInputValue) {\n                scrollIndex = i;\n                break;\n            } else if (\n                formattedName.startsWith(formattedInputValue) &&\n                scrollIndex === 0\n            ) {\n                scrollIndex = i;\n            }\n        }\n        listRef.current.scrollToItem(scrollIndex, 'start');\n    };\n\n    const Row = ({ index, style }) => (\n        <div style={style}>\n            {\n                <NavCoinPreview\n                    logo={availableCoins[index].logo_url}\n                    id={availableCoins[index].id}\n                    name={availableCoins[index].name}\n                    setNewCoinSymbol={setNewCoinSymbol}\n                    setSearchBoxHidden={setSearchBoxHidden}\n                ></NavCoinPreview>\n            }\n        </div>\n    );\n\n    return (\n        <div\n            className={styles.navbar}\n            onMouseLeave={() => setSearchBoxHidden(true)}\n            onMouseEnter={() => setSearchBoxHidden(false)}\n        >\n            <input\n                onFocus={() => setSearchBoxHidden(false)}\n                ref={searchInput}\n                className={styles.searchInput}\n                placeholder=\"Search Name\"\n                onChange={searchAvailableCoins}\n            ></input>\n            <div\n                className={`${styles.searchBox} ${\n                    searchBoxHidden ? 'h-0' : 'h-80'\n                }`}\n            >\n                {availableCoins.length === 0 ? (\n                    ''\n                ) : (\n                    <>\n                        <List\n                            ref={listRef}\n                            height={400}\n                            itemCount={availableCoins.length}\n                            itemSize={80}\n                            width={320}\n                        >\n                            {Row}\n                        </List>\n                    </>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default Navbar;\n","import React from 'react';\n\nconst StdBtn = ({ string, handleClick, size }) => {\n    return (\n        <button\n            onClick={handleClick}\n            className={`${\n                size ? `w-${size}` : 'w-28'\n            } h-11 bg-englishLavender rounded border border-spaceCadet mb-2`}\n        >\n            {string}\n        </button>\n    );\n};\n\nexport default StdBtn;\n","import loadSavedCoins from './loadSavedCoins';\n\nconst deleteCoin = (symbol) => {\n    const savedCoinsArr = loadSavedCoins();\n    for (var i = 0; i < savedCoinsArr.length; i++) {\n        if (savedCoinsArr[i].symbol === symbol) {\n            savedCoinsArr.splice(i, 1);\n            localStorage.setItem('savedCoins', JSON.stringify(savedCoinsArr));\n        }\n    }\n};\n\nexport default deleteCoin;\n","import loadSavedCoins from './loadSavedCoins';\n\nconst updateHoldValue = (symbol, newHold) => {\n    const newHoldToNumber = Number(newHold);\n    const rounded = newHoldToNumber.toFixed(8);\n    const formattedHoldAmount = Number(rounded);\n    const savedCoinsArr = loadSavedCoins();\n    for (var i = 0; i < savedCoinsArr.length; i++) {\n        if (savedCoinsArr[i].symbol === symbol) {\n            savedCoinsArr[i].holdAmount = formattedHoldAmount;\n            localStorage.setItem('savedCoins', JSON.stringify(savedCoinsArr));\n        }\n    }\n};\n\nexport default updateHoldValue;\n","import React, { useRef } from 'react';\nimport StdBtn from './StdBtn';\nimport deleteCoin from '../data/deleteCoin';\nimport updateHoldValue from '../data/updateHoldValue';\n\nconst styles = {\n    container:\n        'absolute z-10 flex flex-col justify-center items-center w-4/5 h-4/5 bg-russianViolet top-1/10 left-1/10',\n    holdInput: 'ml-2 w-36 p-1 text-black',\n    lrgTxt: 'text-xl',\n    holdTxt: 'my-4 text-center',\n};\n\nconst EditCoinModal = ({\n    symbol,\n    hold,\n    setViewingEditModal,\n    updateSavedCoins,\n}) => {\n    const holdInputRef = useRef();\n\n    const deleteBtnClick = () => {\n        deleteCoin(symbol);\n        setViewingEditModal(false);\n        updateSavedCoins();\n    };\n\n    const okayBtnClick = () => {\n        const holdValue = holdInputRef.current.value;\n        updateHoldValue(symbol, holdValue);\n        setViewingEditModal(false);\n        updateSavedCoins();\n    };\n\n    return (\n        <div className={styles.container}>\n            <p className={styles.lrgTxt}> Coin: {symbol}</p>\n            <p className={styles.holdTxt}>\n                Hold Amount:{' '}\n                <input\n                    ref={holdInputRef}\n                    className={styles.holdInput}\n                    type=\"number\"\n                    step=\"any\"\n                    min=\"0\"\n                    defaultValue={hold}\n                ></input>\n            </p>\n            <StdBtn\n                string=\"Delete\"\n                size=\"24\"\n                handleClick={deleteBtnClick}\n            ></StdBtn>\n            <StdBtn string=\"Okay\" size=\"24\" handleClick={okayBtnClick}></StdBtn>\n        </div>\n    );\n};\n\nexport default EditCoinModal;\n","import React, { useState } from 'react';\nimport StdBtn from './StdBtn';\nimport EditCoinModal from './EditCoinModal';\n\nconst styles = {\n    container: `flex flex-col items-center p-2 my-4 mx-2`,\n    headerHolder: `flex items-center space-x-1`,\n    coinLogo: 'w-10 h-10',\n    smTxt: 'text-xs',\n    headingText: `text-base`,\n    coinPriceInfoHolder: `text-sm my-2 text-center`,\n};\n\nconst getTotalCoinWorth = (price, hold) => {\n    const worth = price * hold;\n    const round = worth.toFixed(2);\n    //because toFixed makes it a string\n    const backToNumber = Number(round);\n    const formattedWorth = backToNumber.toLocaleString(2);\n    return formattedWorth;\n};\n\nconst CoinInfo = ({ logo, name, symbol, hold, price, updateSavedCoins }) => {\n    const [viewingEditModal, setViewingEditModal] = useState(false);\n\n    const openEditModal = () => {\n        setViewingEditModal(true);\n    };\n\n    const parsedPrice = parseFloat(price);\n    const rounded = parsedPrice.toFixed(2);\n    const backToNumber = Number(rounded);\n    const formattedPrice = backToNumber.toLocaleString();\n\n    return (\n        <div className={styles.container}>\n            {viewingEditModal ? (\n                <EditCoinModal\n                    updateSavedCoins={updateSavedCoins}\n                    symbol={symbol}\n                    hold={hold}\n                    setViewingEditModal={setViewingEditModal}\n                ></EditCoinModal>\n            ) : (\n                ''\n            )}\n            <div className={styles.headerHolder}>\n                <img\n                    alt=\"Coin logo\"\n                    src={logo}\n                    className={styles.coinLogo}\n                ></img>\n                <div className={styles.wordBox}>\n                    <p className={styles.smTxt}>({symbol})</p>\n                    <p className={styles.headingText}>{name}</p>\n                </div>\n            </div>\n            <div className={styles.coinPriceInfoHolder}>\n                <p>Hold: {hold}</p>\n                <p>@ ${formattedPrice}</p>\n                <p>${getTotalCoinWorth(price, hold)}</p>\n            </div>\n            <StdBtn\n                string=\"Edit\"\n                size=\"20\"\n                handleClick={openEditModal}\n            ></StdBtn>\n        </div>\n    );\n};\n\nexport default CoinInfo;\n","import React from 'react';\nimport CoinInfo from './CoinInfo';\nimport StdBtn from './StdBtn';\nimport getHoldAmount from '../data/getHoldAmount';\n\nconst styles = {\n    mainContainer: 'flex flex-col items-center bg-spaceCadet p-4',\n    coinsHolder: `flex flex-wrap w-100 justify-center`,\n    totalWorth: 'text-2xl',\n};\n\nconst CoinHolder = ({ coinsData, updateSavedCoins }) => {\n    const findTotalWorth = () => {\n        let total = 0;\n        for (var i = 0; i < coinsData.length; i++) {\n            const holdAmount = getHoldAmount(coinsData[i].symbol);\n            const worth = holdAmount * coinsData[i].price;\n\n            total += worth;\n        }\n        const round = total.toFixed(2);\n        const backToNumber = Number(round);\n        const formattedTotal = backToNumber.toLocaleString();\n        return formattedTotal;\n    };\n\n    const totalWorth = findTotalWorth();\n\n    return (\n        <div className={styles.mainContainer}>\n            <p className={styles.totalWorth}>Total: ${totalWorth}</p>\n            <div className={styles.coinsHolder}>\n                {coinsData.map((coin) => {\n                    return (\n                        <CoinInfo\n                            key={coin.name}\n                            logo={coin.logo_url}\n                            name={coin.name}\n                            symbol={coin.symbol}\n                            hold={getHoldAmount(coin.symbol)}\n                            price={coin.price}\n                            updateSavedCoins={updateSavedCoins}\n                        ></CoinInfo>\n                    );\n                })}\n            </div>\n            <StdBtn\n                string=\"Update Prices\"\n                size=\"40\"\n                handleClick={updateSavedCoins}\n            ></StdBtn>\n        </div>\n    );\n};\n\nexport default CoinHolder;\n","export default __webpack_public_path__ + \"static/media/eyecoin.9a3b9641.png\";","export default __webpack_public_path__ + \"static/media/ethcoin.2b11334e.png\";","import React from 'react';\nimport coinEye from '../images/eyecoin.png';\nimport ethCoin from '../images/ethcoin.png';\n\nconst styles = {\n    container: 'bg-white flex flex-col justify-center items-center',\n    eyeImgDiv: 'relative flex justify-center items-center mb-10',\n    eyeOutline: '',\n    rotatingCoin: 'absolute h-28 w-28 animate-coinSpin',\n    wordBox: 'text-xl text-center bg-englishLavender p-5',\n};\n\nconst NoSavedCoinsSign = () => {\n    return (\n        <div\n            style={{ height: 'calc(100vh - 3rem)' }}\n            className={styles.container}\n        >\n            <div className={styles.eyeImgDiv}>\n                <img\n                    className={styles.rotatingCoin}\n                    alt=\"ethcoin\"\n                    src={ethCoin}\n                ></img>\n                <img\n                    className={styles.eyeOutline}\n                    src={coinEye}\n                    alt=\"coin eye\"\n                ></img>\n            </div>\n            <div className={styles.wordBox}>\n                Looks like you have no coins! Use the search bar above to add\n                some.\n            </div>\n        </div>\n    );\n};\n\nexport default NoSavedCoinsSign;\n","import React from 'react';\n\nconst style = {\n    bar: 'bg-spaceCadet h-16 flex justify-center items-center',\n    link: 'underline cursor-pointer',\n};\n\nconst Attribution = () => {\n    return (\n        <div className={style.bar}>\n            <a\n                href=\"https://nomics.com/\"\n                target=\"_blank\"\n                className={style.link}\n            >\n                Crypto Market Cap & Pricing Data Provided By Nomics\n            </a>\n        </div>\n    );\n};\n\nexport default Attribution;\n","import React from 'react';\n\nconst styles = {\n    container: 'flex my-40 mx-auto w-32 justify-center',\n    ball: 'rounded-circle h-6 w-6 mx-1 animate-pulse',\n};\n\nconst LoadingBalls = () => {\n    return (\n        <div className={styles.container}>\n            <div className={`${styles.ball} bg-black`}></div>\n            <div className={`${styles.ball} bg-russianViolet`}></div>\n            <div className={`${styles.ball} bg-spaceCadet`}></div>\n        </div>\n    );\n};\n\nexport default LoadingBalls;\n","import loadSavedCoins from './loadSavedCoins';\n\nconst addNewCoin = (symbol, holdAmount) => {\n    const holdToNumber = Number(holdAmount);\n    const rounded = holdToNumber.toFixed(8);\n    const formattedHoldAmount = Number(rounded);\n    const newCoin = { symbol: symbol, holdAmount: formattedHoldAmount };\n    const currentCoins = loadSavedCoins();\n    if (currentCoins === null) {\n        const arr = [newCoin];\n        localStorage.setItem('savedCoins', JSON.stringify(arr));\n    } else {\n        let alreadyOwnCoin = false;\n        for (var i = 0; i < currentCoins.length; i++) {\n            if (symbol === currentCoins[i].symbol) {\n                alreadyOwnCoin = true;\n            }\n        }\n\n        if (alreadyOwnCoin === false) {\n            const updatedArr = [...currentCoins, newCoin];\n            localStorage.setItem('savedCoins', JSON.stringify(updatedArr));\n        } else {\n            alert(\n                'You have already added this coin before! Edit hold amount or delete using edit button.'\n            );\n        }\n    }\n};\n\nexport default addNewCoin;\n","import React, { useRef } from 'react';\nimport StdBtn from './StdBtn';\nimport addNewCoin from '../data/addNewCoin';\n\nconst styles = {\n    container:\n        'absolute z-10 flex flex-col justify-center items-center w-4/5 h-4/5 bg-russianViolet top-1/10 left-1/10',\n    question: 'text-center p-2 text-md',\n    input: 'p-1 w-40 my-3 text-black',\n    smallTxt: 'text-xs my-1',\n};\n\nconst AddCoinModal = ({ hideModal, symbol, updateSavedCoins }) => {\n    const userInput = useRef();\n\n    const AddCoin = () => {\n        addNewCoin(symbol, userInput.current.value);\n        hideModal();\n        updateSavedCoins();\n    };\n\n    return (\n        <div className={styles.container}>\n            <p className={styles.question}>\n                How many {symbol} do you currently have?\n            </p>\n            <p className={styles.smallTxt}>(Up to 8 decimal points)</p>\n            <input\n                ref={userInput}\n                type=\"number\"\n                step=\"any\"\n                maxLength=\"12\"\n                min=\"0\"\n                className={styles.input}\n            ></input>\n            <StdBtn string=\"Add Coin\" handleClick={AddCoin}></StdBtn>\n            <StdBtn string=\"Cancel\" handleClick={hideModal}></StdBtn>\n        </div>\n    );\n};\n\nexport default AddCoinModal;\n","import React from 'react';\nimport { Doughnut } from '@iftek/react-chartjs-3';\n\nconst DoughnutChart = ({ data }) => {\n    const labels = [];\n    const dataPoints = [];\n\n    for (var i = 0; i < data.length; i++) {\n        labels.push(data[i].symbol);\n        dataPoints.push(data[i].totalWorth);\n    }\n\n    const chartData = {\n        labels: labels,\n        datasets: [\n            {\n                data: dataPoints,\n                backgroundColor: [\n                    '#ff0000',\n                    '#0000ff',\n                    '#065535',\n                    '#ff80ed',\n                    '#ffa500',\n                    '#ffd700',\n                    '#00ffff',\n                    '#003366',\n                    '#66cdaa',\n                    '#f5f5f5',\n                ],\n            },\n        ],\n    };\n\n    return <Doughnut data={chartData}></Doughnut>;\n};\n\nexport default DoughnutChart;\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport getCoinsInfoFromApi from './api/getCoinsInfoFromApi';\nimport getAvailableCoins from './api/getAvailableCoins';\nimport loadSavedCoins from './data/loadSavedCoins';\nimport getSavedCoinSymbols from './data/getSavedCoinSymbols';\nimport getHoldAmount from './data/getHoldAmount';\nimport Navbar from './components/Navbar';\nimport CoinHolder from './components/CoinHolder';\nimport NoSavedCoinsSign from './components/NoSavedCoinsSign';\nimport Attribution from './components/Attribution';\nimport LoadingBalls from './components/LoadingBalls';\nimport AddCoinModal from './components/AddCoinModal';\nimport DoughnutChart from './components/DoughnutChart';\n\nconst currentCoins = loadSavedCoins();\n\nfunction App() {\n    const [savedCoinsData, setSavedCoinsData] = useState('loading');\n    const [chartData, setChartData] = useState('');\n    const [availableCoins, setAvailableCoins] = useState([]);\n    const [newCoinSymbol, setNewCoinSymbol] = useState('');\n\n    const updateRatioChart = (data) => {\n        const coinArr = [];\n        for (var i = 0; i < data.length; i++) {\n            const holdAmount = getHoldAmount(data[i].symbol);\n            const totalAmountWorth = holdAmount * data[i].price;\n            const round = totalAmountWorth.toFixed(2);\n            const backToNumber = Number(round);\n            const coinObject = {\n                symbol: data[i].symbol,\n                totalWorth: backToNumber,\n            };\n            coinArr.push(coinObject);\n        }\n        setChartData(coinArr);\n    };\n\n    const updateSavedCoins = async () => {\n        const savedCoinSymbols = getSavedCoinSymbols();\n        console.log(savedCoinSymbols);\n        setSavedCoinsData('loading');\n        if (savedCoinSymbols.length === 0) {\n            console.log('hello');\n            setSavedCoinsData(null);\n        } else {\n            const data = await getCoinsInfoFromApi(savedCoinSymbols);\n            updateRatioChart(data);\n            setSavedCoinsData(data);\n        }\n    };\n\n    useEffect(() => {\n        const fetchSavedCoinsData = async () => {\n            console.log('fetching saved data');\n            if (currentCoins !== null && currentCoins.length !== 0) {\n                updateSavedCoins();\n            } else {\n                setSavedCoinsData(null);\n            }\n        };\n        setTimeout(() => fetchSavedCoinsData(), 3000);\n    }, []);\n\n    useEffect(() => {\n        const fetchAvailableCoins = async () => {\n            const data = await getAvailableCoins();\n            console.log('fetching available coins');\n            const filteredArr = [];\n            data.forEach((coin) => {\n                if (coin.logo_url !== '' && coin.description !== '') {\n                    filteredArr.push(coin);\n                }\n            });\n            setAvailableCoins(filteredArr);\n        };\n        fetchAvailableCoins();\n    }, []);\n\n    const hideModal = () => {\n        setNewCoinSymbol('');\n    };\n\n    return (\n        <>\n            {newCoinSymbol !== '' ? (\n                <AddCoinModal\n                    hideModal={hideModal}\n                    symbol={newCoinSymbol}\n                    updateSavedCoins={updateSavedCoins}\n                ></AddCoinModal>\n            ) : (\n                ''\n            )}\n            <Navbar\n                availableCoins={availableCoins}\n                setNewCoinSymbol={setNewCoinSymbol}\n            ></Navbar>\n            {savedCoinsData === null ? (\n                <NoSavedCoinsSign></NoSavedCoinsSign>\n            ) : savedCoinsData === 'loading' ? (\n                <LoadingBalls></LoadingBalls>\n            ) : (\n                <>\n                    <CoinHolder\n                        coinsData={savedCoinsData}\n                        updateSavedCoins={updateSavedCoins}\n                    ></CoinHolder>\n                    <div\n                        style={{ maxWidth: '30rem' }}\n                        className=\"mx-auto text-center my-4\"\n                    >\n                        <p className=\"text-2xl text-black mb-4\">Coins Ratio</p>\n                        <DoughnutChart data={chartData}></DoughnutChart>\n                    </div>\n                </>\n            )}\n            <Attribution></Attribution>\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}